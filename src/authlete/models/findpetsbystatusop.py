"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
from authlete.types import BaseModel
from authlete.utils import FieldMetadata, QueryParamMetadata
from enum import Enum
from typing import Optional
from typing_extensions import Annotated, NotRequired, TypedDict


class FindPetsByStatusStatus(str, Enum):
    r"""Status values that need to be considered for filter"""

    AVAILABLE = "available"
    PENDING = "pending"
    SOLD = "sold"


class FindPetsByStatusRequestTypedDict(TypedDict):
    status: NotRequired[FindPetsByStatusStatus]
    r"""Status values that need to be considered for filter"""


class FindPetsByStatusRequest(BaseModel):
    status: Annotated[
        Optional[FindPetsByStatusStatus],
        FieldMetadata(query=QueryParamMetadata(style="form", explode=True)),
    ] = FindPetsByStatusStatus.AVAILABLE
    r"""Status values that need to be considered for filter"""
